[Compiling]: Removing old binary...
[Compiling]: Compiling source code...
[Parser]: <type=ID, int_type=0, value=var>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=0>
[Parser]: <type=COLON, int_type=2, value=:>
[Parser]: <type=ID, int_type=0, value=i>
[Parser]: <type=INT, int_type=1, value=32>
[Parser]: <type=EQUAL, int_type=5, value==>
[Parser]: <type=INT, int_type=1, value=2123>
[Parser]: <type=SEMI, int_type=3, value=;>
[Parser]: <type=ID, int_type=0, value=var>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=1>
[Parser]: <type=COLON, int_type=2, value=:>
[Parser]: <type=ID, int_type=0, value=i>
[Parser]: <type=INT, int_type=1, value=32>
[Parser]: <type=EQUAL, int_type=5, value==>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=0>
[Parser]: <type=SEMI, int_type=3, value=;>
[Parser]: <type=ID, int_type=0, value=var>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=2>
[Parser]: <type=COLON, int_type=2, value=:>
[Parser]: <type=ID, int_type=0, value=byte>
[Parser]: <type=EQUAL, int_type=5, value==>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=0>
[Parser]: <type=SEMI, int_type=3, value=;>
[Parser]: <type=ID, int_type=0, value=var>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=3>
[Parser]: <type=COLON, int_type=2, value=:>
[Parser]: <type=ID, int_type=0, value=byte>
[Parser]: <type=EQUAL, int_type=5, value==>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=2>
[Parser]: <type=SEMI, int_type=3, value=;>
[Parser]: <type=ID, int_type=0, value=var>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=4>
[Parser]: <type=COLON, int_type=2, value=:>
[Parser]: <type=ID, int_type=0, value=i>
[Parser]: <type=INT, int_type=1, value=16>
[Parser]: <type=EQUAL, int_type=5, value==>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=1>
[Parser]: <type=SEMI, int_type=3, value=;>
[Parser]: <type=ID, int_type=0, value=var>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=5>
[Parser]: <type=COLON, int_type=2, value=:>
[Parser]: <type=ID, int_type=0, value=byte>
[Parser]: <type=EQUAL, int_type=5, value==>
[Parser]: <type=ID, int_type=0, value=t>
[Parser]: <type=INT, int_type=1, value=4>
[Parser]: <type=SEMI, int_type=3, value=;>
[Compiling]: Generating object file from assembly...
[Compiling]: Linking...
[Compiling]: Runing and status code...
0
section .text
	global main
main:
	push ebp
	mov ebp, esp
	mov dword [ebp - 4], 2123
	mov eax, dword [ebp - 4]
	mov dword [ebp - 8], eax
	mov eax, dword [ebp - 4]
	mov byte [ebp - 9], al
	movzx eax, byte [ebp - 9]
	mov byte [ebp - 10], al
	mov eax, dword [ebp - 8]
	mov word [ebp - 12], ax
	movzx eax, word [ebp - 12]
	mov byte [ebp - 13], al
	mov eax, 0
	pop ebp
	ret